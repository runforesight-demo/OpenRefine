name: Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'main/webapp/modules/core/langs/**'
      - 'extensions/database/module/langs/**'
      - 'extensions/gdata/module/langs/**'
      - 'extensions/pc-axis/module/langs/**'
      - 'extensions/phonetic/module/langs/**'
      - 'extensions/wikidata/module/langs/**'

permissions: read-all

env:
  FORESIGHT_UPLOADER_SIGNER_URL: https://upload.service.runforesight.us
  WORKFLOW_TELEMETRY_BASE_URL: https://api.service.runforesight.us

jobs:
  linux_server_tests:
    strategy:
      matrix:
        java: [ 11, 17 ]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 'postgres'
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3

    steps:
    - name: Collect Workflow Telemetry
      if: always()
      uses: runforesight/foresight-workflow-kit-action@v1
      with:
        api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
    - name: Set up secrets
      run: |
        echo "COVERALLS_TOKEN=$(echo eUVUVGRHOFJhQm9GMFJBYTNibjVhcWFEblpac1lmMlE3Cg== | base64 -d)" >> $GITHUB_ENV

    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Restore dependency cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-maven-

    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}

    - name: Check Java linting
      id: java_linting
      run: |
        mvn compile formatter:validate javadoc:javadoc -Ddoclint=all

    - name: Configure connections to databases
      id: configure_db_connections
      run: cat extensions/database/tests/conf/github_actions_tests.xml | sed -e "s/MYSQL_PORT/${{ job.services.mysql.ports[3306] }}/g" | sed -e "s/POSTGRES_PORT/${{ job.services.postgres.ports[5432] }}/g" > extensions/database/tests/conf/tests.xml

    - name: Populate databases with test data
      id: populate_databases_with_test_data
      run: |
        mysql -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} -proot -e 'CREATE DATABASE test_db;'
        mysql -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} -proot < extensions/database/tests/conf/test-mysql.sql
        psql -U postgres test_db -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} < extensions/database/tests/conf/test-pgsql.sql
      env:
        PGPASSWORD: postgres

    - name: Build and test with Maven
      run: mvn jacoco:prepare-agent test
      
    - name: Analyze Test and/or Coverage Results
      if: always()
      uses: runforesight/foresight-test-kit-action@v1
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_framework: junit
        test_path: "./*/target/surefire-reports/**"
        coverage_format: jacoco/xml
        coverage_path: "./*/target/site/jacoco/*.xml"

  windows_server_tests:
    runs-on: windows-latest

    steps:
    - name: Collect Workflow Telemetry
      if: always()
      uses: runforesight/foresight-workflow-kit-action@v1
      with:
        api_key: ${{ secrets.FORESIGHT_PROJECT_WALL_APIKEY }}
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Restore dependency cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-maven-

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 17

    - name: Check Java linting
      id: java_linting
      run: |
        mvn formatter:validate

    - name: Build and test with Maven
      run: mvn jacoco:prepare-agent test    
      
    - name: Analyze Test and/or Coverage Results
      if: always()
      uses: runforesight/foresight-test-kit-action@v1
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_framework: junit
        test_path: "./*/target/surefire-reports/**"
        coverage_format: jacoco/xml
        coverage_path: "./*/target/site/jacoco/*.xml"
